apiVersion: apps/v1
kind: Deployment
metadata:
  name: platform
spec:
  template:
    metadata:
      annotations:
        configmap.reloader.stakater.com/reload: "loadtest-platform-cm, loadtest-deployment-cm, loadtest-platform-secret-configmap"
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/agent-pre-populate-only: "true"
        vault.hashicorp.com/agent-configmap: "loadtest-platform-secret-configmap"
        vault.hashicorp.com/agent-requests-cpu: "25m"
        vault.hashicorp.com/agent-limits-cpu: "50m" 
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: instance
                operator: In
                values:
                - loadtest
            topologyKey: failure-domain.beta.kubernetes.io/zone
      initContainers:
        - name: init-sqldatabase
          image: mcr.microsoft.com/mssql-tools
          command:
            - "/bin/sh"
            - "-c"
          args:
            - "/opt/mssql-tools/bin/sqlcmd -S $(VC_DB_HOST) -U $(VC_DB_USER)@$(VC_DB_HOST) -P '$(VC_DBSERVER_MASTER_PASSWORD)' -q \"CREATE LOGIN [$(VC_INSTANCE)_$(VC_NAMESPACE)_user] WITH PASSWORD = '$(VC_CUSTOMER_DB_PASSWORD)'\"
            && /opt/mssql-tools/bin/sqlcmd -S $(VC_DB_HOST) -U $(VC_DB_USER)@$(VC_DB_HOST) -P '$(VC_DBSERVER_MASTER_PASSWORD)' -q \"CREATE USER [$(VC_INSTANCE)_$(VC_NAMESPACE)_user] FROM LOGIN [$(VC_INSTANCE)_$(VC_NAMESPACE)_user]\"
            && /opt/mssql-tools/bin/sqlcmd -S $(VC_DB_HOST) -U $(VC_DB_USER)@$(VC_DB_HOST) -P '$(VC_DBSERVER_MASTER_PASSWORD)' -q \"CREATE DATABASE [loadtest-platform_dev_separate] AS COPY OF [loadtest-platform_dev_separate_restored] ( SERVICE_OBJECTIVE = ELASTIC_POOL ( name = [$(VC_DB_POOL)] ) )\""
      containers:
        - name: vc-platform-web
          resources:
            limits:
              cpu: "500m"
              memory: 756Mi
            requests:
              cpu: "500m"
              memory: 512Mi
          volumeMounts:
          - mountPath: "/opt/virtocommerce/platform/wwwroot/cms-content"
            name: cms-content-data
          - mountPath: "/opt/virtocommerce/platform/modules"
            name: modules-data
      volumes:
      - name: cms-content-data
        persistentVolumeClaim:
          claimName: cms-content-volume
      - name: modules-data
        emptyDir: {}
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 2
    type: RollingUpdate
