apiVersion: apps/v1
kind: Deployment
metadata:
  name: platform
spec:
  replicas: 1
  selector:
    matchLabels:
      app: platform
  template:
    metadata:
      annotations:
        reloader.stakater.com/search: "true"
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/agent-pre-populate-only: "true"
        vault.hashicorp.com/agent-requests-cpu: "25m"
        vault.hashicorp.com/agent-limits-cpu: "50m"     
      labels:
        app: platform
    spec:
      # create database in azure within a sql pool
      initContainers:
      - name: init-platform
        image: docker.pkg.github.com/virtocommerce/vc-deploy-containers/platform-installer:v2
        command:
          - "/bin/sh"
          - "-c"
        args:
          - "echo START INIT $(date +%Y-%m-%d-%H-%M-%S) 
          && python3 install-modules.py \"$MODULES_CONFIG\" /mnt/Modules/*
          && echo MODULES INSTALLED $(date +%Y-%m-%d-%H-%M-%S)"            
        envFrom:
          - configMapRef:
              name: deployment-cm
        env:
          - name: MODULES_CONFIG
            valueFrom:
              configMapKeyRef:
                name: deployment-cm
                key: modules.json 
        volumeMounts:
          - mountPath: /mnt/Modules
            name: modules-data
      - name: init-sqldatabase
        image: mcr.microsoft.com/mssql-tools
        command:
          - "/opt/mssql-tools/bin/sqlcmd"
          - "-S"
          - "$(VC_DB_HOST)"
          - "-U"
          - "$(VC_DB_USER)@$(VC_DB)"
          - "-P"
          - "$(VC_DBSERVER_MASTER_PASSWORD)"
          - "-q"
          - "CREATE DATABASE [$(VC_PLATFORM_SERVICE)_$(VC_NAMESPACE)] $(VC_DB_COPY_PARAM) ( SERVICE_OBJECTIVE = ELASTIC_POOL ( name = [$(VC_DB_POOL)] ) )"
        env:
          - name: VC_SAMPLE_DATA_DB
            value: vc-empty-db
          - name: VC_DB_COPY_PARAM
            value: "AS COPY OF [$(VC_SAMPLE_DATA_DB)]"  
          - name: VC_DBSERVER_MASTER_PASSWORD
            valueFrom:
              secretKeyRef:
                name: vc-dbserver-password
                key: password 
      containers:
      - name: vc-platform-web      
        image: docker.pkg.github.com/virtocommerce/vc-platform/platform:dev-linux-latest    
        envFrom:
        - configMapRef:
            name: platform-cm
        command:
            - "/bin/bash"
            - "-c"
        args:
            - "source /vault/secrets/config_base && source /vault/secrets/config_custom && dotnet VirtoCommerce.Platform.Web.dll"  
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: "/opt/virtocommerce/platform/modules"
          name: modules-data
      volumes:
      - name: modules-data
        emptyDir: {}     
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate