name: Cloud custom-app1 deployment

on:
  workflow_dispatch:
  push:
    paths:
      - 'custom-app1/**'
    branches: 
      - 'vcptcore-*'

jobs:
  gitops-publish-custom-app1:
    runs-on: ubuntu-20.04
    env:
      DOCKER_LOGIN: vcptcore-token
      DOCKER_PASSWORD: ${{ secrets.VCPTCORE_ACR_DOCKER_PASSWORD }}
      CONTAINER_REGISTRY: virtopaasregistrymain.azurecr.io
      IMAGE_REPOSITORY: virtopaasregistrymain.azurecr.io/vcptcore/workflow
      ARGO_APP_NAME: ${{ github.ref_name }}

    steps:
    - uses: actions/checkout@v3
    
    - name: Install vc-build
      run: |
        dotnet tool install --global VirtoCommerce.GlobalTool
    
    - name: Get custom app version
      id: platform-version
      run: |
        echo "CUSTOM_APP_TAG=$(cat ./storefront/image.json | jq -r '.Tag')" >> $GITHUB_ENV
        echo "CUSTOM_APP_REPO=$(cat ./storefront/image.json | jq -r '.Repository')" >> $GITHUB_ENV

    - name: Docker Login to ghcr.io
      uses: azure/docker-login@v1
      with:
        login-server: ghcr.io
        username: vc-ci
        password: ${{ secrets.REPO_TOKEN }}

    - name: Pull vc-workflow image from private registry
      run: |
        docker pull ${{ env.CUSTOM_APP_REPO }}:${{ env.CUSTOM_APP_TAG }}
    
    - name: Docker Login to ${{ env.CONTAINER_REGISTRY }}
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.CONTAINER_REGISTRY }}
        username: ${{ env.DOCKER_LOGIN }}
        password: ${{ env.DOCKER_PASSWORD }}

    - name: Publish vc-workflow image to the Virto Cloud
      run: |
        docker tag ${{ env.CUSTOM_APP_REPO }}:${{ env.CUSTOM_APP_TAG }} ${{ env.IMAGE_REPOSITORY }}:${{ env.CUSTOM_APP_TAG }}
        docker push ${{ env.IMAGE_REPOSITORY }}:${{ env.CUSTOM_APP_TAG }}

    - name: Update app
      run: |
        vc-build SetHelmParameter -ArgoServer https://argocd.govirto.com -ArgoAppName ${{ env.ARGO_APP_NAME }} -ArgoToken ${{ secrets.VCPTCORE_TOKEN }} -HelmParameters custom.app1.image.tag=$TAG
      env:
        TAG: ${{ env.CUSTOM_APP_TAG }}
