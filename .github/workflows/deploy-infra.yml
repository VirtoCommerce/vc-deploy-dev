name: Cloud infra deployment
on:
  workflow_dispatch:
  push:
    paths:
      - 'infra/**'
    branches: 
      # VCI-636 
      - 'virtoseb-krasnodar'
      - 'virtoseb-bangkok'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install VirtoCommerce.GlobalTool
        uses: VirtoCommerce/vc-github-actions/setup-vcbuild@master

      - name: Set values
        id: values
        run: |
          echo "TEAM=$(echo ${{ github.ref_name }} | awk -F- '{print $2}')" >> $GITHUB_OUTPUT

      - name: Update ${{ github.ref_name }} cloud environment
        if: github.ref_name == 'virtoseb-krasnodar' 
        env:
          TEAM: ${{ steps.team.outputs.TEAM }}
          ARGO_APP_NAME: qa
          SERVICE_PLAN: B2
          DB_NAME: krasnodar-qa-platform_krasnodar
          ELASTIC_USER: krasnodar-qa-krasnodar
          WEBHOOK_URL: eastus-vc-dev.webhook.virtocloud.dev
          REGISTRY: virtopaasregistrymain.azurecr.io
          SAAS_TOKEN: ${{ secrets.VIRTOSEB_PORTAL_TOKEN }}
        run: |
          envsubst < environment.template > environment.yml
          vc-build UpdateCloudEnvironment -CloudToken $SAAS_TOKEN -ArgoConfigFile environment.yml -CloudUrl https://portal.virtocloud.dev
        working-directory: backend

      - name: Update ${{ github.ref_name }} cloud environment
        if: github.ref_name == 'virtoseb-bangkok' 
        env:
          TEAM: ${{ steps.values.outputs.TEAM }}
          ARGO_APP_NAME: qa
          SERVICE_PLAN: B2
          DB_NAME: bangkok-qa-platform_bangkok
          ELASTIC_USER: bangkok-qa-bangkok
          WEBHOOK_URL: eastus-vc-dev.webhook.virtocloud.dev
          REGISTRY: virtopaasregistrymain.azurecr.io
          SAAS_TOKEN: ${{ secrets.VIRTOSEB_PORTAL_TOKEN }}
        run: |
          envsubst < environment.template > environment.yml
          vc-build UpdateCloudEnvironment -CloudToken $SAAS_TOKEN -ArgoConfigFile environment.yml -CloudUrl https://portal.virtocloud.dev
        working-directory: backend        