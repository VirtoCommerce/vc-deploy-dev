name: Cloud platform deployment

on:
  workflow_dispatch:
  push:
    paths:
      - 'backend/**'
    branches: 
      - 'vcst-*'

jobs:
  gitops:
    runs-on: ubuntu-latest
    env:
      ARGO_APP_NAME: ${{ github.ref_name }}
      PLATFORM_VERSION: ''
      SHA_SHORT: ''

    steps:
    - uses: actions/checkout@v3
  
    - name: Az config
      run: |
        az config set extension.use_dynamic_install=yes_without_prompt
    
    - name: Install vc-build
      run: |
        dotnet tool install --global VirtoCommerce.GlobalTool

    - name: Pack
      run: |
        vc-build install -PackageManifestPath ./backend/packages.json -ProbingPath ./backend/platform/app_data/modules -DiscoveryPath ./backend/platform/modules --root ./backend/platform -SkipDependencySolving -edge
  
    - name: Get platfrom version
      id: platform-version
      run: |
        echo "PLATFORM_VERSION=$(cat ./backend/packages.json | jq -r '.PlatformVersion')" >> $GITHUB_ENV

    - name: Set outputs
      id: vars
      run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

    - name: Build and Publish Docker Image
      run: |
        vc-build BuildAndPush -DockerUsername $DOCKER_LOGIN -DockerPassword $DOCKER_PASSWORD -DockerfilePath $DOCKERFILE_PATH -DockerImageName $IMAGE_REPOSITORY -DockerImageTag $TAG -DockerRegistryUrl $CONTAINER_REGISTRY
      env:
        DOCKER_LOGIN: vcst-token
        DOCKER_PASSWORD: ${{ secrets.VCST_ACR_DOCKER_PASSWORD }}
        DOCKERFILE_PATH: ./backend/Dockerfile
        CONTAINER_REGISTRY: virtopaasregistrymain.azurecr.io
        IMAGE_REPOSITORY: virtopaasregistrymain.azurecr.io/vcst/platform
        TAG: ${{ env.PLATFORM_VERSION }}-${{ env.SHA_SHORT }}
    
    - name: Update app
      run: |
        vc-build SetEnvParameter -EnvironmentName ${{ env.ARGO_APP_NAME }} -CloudToken ${{ secrets.VCST_PLATFORM_TOKEN }} -HelmParameters platform.image.tag=$TAG
      env:
        TAG: ${{ env.PLATFORM_VERSION }}-${{ env.SHA_SHORT }}
